<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="19" total="46" passed="27">
  <reporter-output>
  </reporter-output>
  <suite name="Haud" duration-ms="49576" started-at="2020-02-10T13:25:34Z" finished-at="2020-02-10T13:26:24Z">
    <groups>
    </groups>
    <test name="Voyages" duration-ms="24125" started-at="2020-02-10T13:25:34Z" finished-at="2020-02-10T13:25:58Z">
      <class name="com.Tests.Voyages">
        <test-method status="PASS" signature="setClass()[pri:0, instance:com.Tests.Voyages@331acdad]" name="setClass" is-config="true" duration-ms="203" started-at="2020-02-10T18:55:34Z" finished-at="2020-02-10T18:55:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setClass -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="124" started-at="2020-02-10T18:55:34Z" finished-at="2020-02-10T18:55:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="3" started-at="2020-02-10T18:55:34Z" finished-at="2020-02-10T18:55:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createVoyageVerify(java.lang.reflect.Method)[pri:1, instance:com.Tests.Voyages@331acdad]" name="createVoyageVerify" duration-ms="6761" started-at="2020-02-10T18:55:34Z" description="create voyages" finished-at="2020-02-10T18:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createVoyageVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="103" started-at="2020-02-10T18:55:41Z" finished-at="2020-02-10T18:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:41Z" finished-at="2020-02-10T18:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createVoyageBlankDataVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.Voyages@331acdad]" name="createVoyageBlankDataVerify" duration-ms="952" started-at="2020-02-10T18:55:41Z" description="check blank body" finished-at="2020-02-10T18:55:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createVoyageBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createVoyageBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="120" started-at="2020-02-10T18:55:42Z" finished-at="2020-02-10T18:55:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-10T18:55:42Z" finished-at="2020-02-10T18:55:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="updateVoyageVerify(java.lang.reflect.Method)[pri:3, instance:com.Tests.Voyages@331acdad]" name="updateVoyageVerify" duration-ms="1468" started-at="2020-02-10T18:55:42Z" description="update voyages" finished-at="2020-02-10T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyageVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.updateVoyageVerify(Voyages.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateVoyageVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="125" started-at="2020-02-10T18:55:44Z" finished-at="2020-02-10T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getVoyageByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-10T18:55:44Z" finished-at="2020-02-10T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getVoyageByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getVoyageByIdVerify(java.lang.reflect.Method)[pri:4, instance:com.Tests.Voyages@331acdad]" name="getVoyageByIdVerify" duration-ms="866" started-at="2020-02-10T18:55:44Z" description="get voyages by id" finished-at="2020-02-10T18:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getVoyageByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [409]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.getVoyageByIdVerify(Voyages.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVoyageByIdVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="126" started-at="2020-02-10T18:55:45Z" finished-at="2020-02-10T18:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:45Z" finished-at="2020-02-10T18:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="updateVoyagesStatusFalseVerify(java.lang.reflect.Method)[pri:5, instance:com.Tests.Voyages@331acdad]" name="updateVoyagesStatusFalseVerify" duration-ms="843" started-at="2020-02-10T18:55:45Z" description="update staust active to inactive" finished-at="2020-02-10T18:55:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.updateVoyagesStatusFalseVerify(Voyages.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateVoyagesStatusFalseVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="115" started-at="2020-02-10T18:55:46Z" finished-at="2020-02-10T18:55:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="FAIL" signature="updateVoyagesStatusTrueVerify(java.lang.reflect.Method)[pri:6, instance:com.Tests.Voyages@331acdad]" name="updateVoyagesStatusTrueVerify" duration-ms="840" started-at="2020-02-10T18:55:46Z" description="update staust active to inactive" finished-at="2020-02-10T18:55:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.updateVoyagesStatusTrueVerify(Voyages.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateVoyagesStatusTrueVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:46Z" finished-at="2020-02-10T18:55:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.updateVoyagesStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="106" started-at="2020-02-10T18:55:47Z" finished-at="2020-02-10T18:55:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.isInitialApprovedVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:47Z" finished-at="2020-02-10T18:55:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.isInitialApprovedVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="isInitialApprovedVerify(java.lang.reflect.Method)[pri:7, instance:com.Tests.Voyages@331acdad]" name="isInitialApprovedVerify" duration-ms="859" started-at="2020-02-10T18:55:47Z" description="approve inital" finished-at="2020-02-10T18:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.isInitialApprovedVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.isInitialApprovedVerify(Voyages.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isInitialApprovedVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="115" started-at="2020-02-10T18:55:48Z" finished-at="2020-02-10T18:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.finalApproveVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:48Z" finished-at="2020-02-10T18:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.finalApproveVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="finalApproveVerify(java.lang.reflect.Method)[pri:8, instance:com.Tests.Voyages@331acdad]" name="finalApproveVerify" duration-ms="823" started-at="2020-02-10T18:55:48Z" description="approve final" finished-at="2020-02-10T18:55:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.finalApproveVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.Voyages.finalApproveVerify(Voyages.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finalApproveVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="93" started-at="2020-02-10T18:55:49Z" finished-at="2020-02-10T18:55:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getAllVoyagesByVesselVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:49Z" finished-at="2020-02-10T18:55:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getAllVoyagesByVesselVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllVoyagesByVesselVerify(java.lang.reflect.Method)[pri:9, instance:com.Tests.Voyages@331acdad]" name="getAllVoyagesByVesselVerify" duration-ms="854" started-at="2020-02-10T18:55:49Z" description="check all  voyages by vessel" finished-at="2020-02-10T18:55:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getAllVoyagesByVesselVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllVoyagesByVesselVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="97" started-at="2020-02-10T18:55:50Z" finished-at="2020-02-10T18:55:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getReportsForPassagesVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:50Z" finished-at="2020-02-10T18:55:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getReportsForPassagesVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getReportsForPassagesVerify(java.lang.reflect.Method)[pri:10, instance:com.Tests.Voyages@331acdad]" name="getReportsForPassagesVerify" duration-ms="852" started-at="2020-02-10T18:55:50Z" description="check all  voyages by vessel" finished-at="2020-02-10T18:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.getReportsForPassagesVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReportsForPassagesVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="95" started-at="2020-02-10T18:55:51Z" finished-at="2020-02-10T18:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.approvalAuditListVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:51Z" finished-at="2020-02-10T18:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.approvalAuditListVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="approvalAuditListVerify(java.lang.reflect.Method)[pri:11, instance:com.Tests.Voyages@331acdad]" name="approvalAuditListVerify" duration-ms="841" started-at="2020-02-10T18:55:51Z" description="check approval audit list" finished-at="2020-02-10T18:55:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.approvalAuditListVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approvalAuditListVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="126" started-at="2020-02-10T18:55:52Z" finished-at="2020-02-10T18:55:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:52Z" finished-at="2020-02-10T18:55:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createPositionVerify(java.lang.reflect.Method)[pri:12, instance:com.Tests.Voyages@331acdad]" name="createPositionVerify" duration-ms="1482" started-at="2020-02-10T18:55:52Z" description="create position" finished-at="2020-02-10T18:55:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPositionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="153" started-at="2020-02-10T18:55:53Z" finished-at="2020-02-10T18:55:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:53Z" finished-at="2020-02-10T18:55:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createPositionBlankDataVerify(java.lang.reflect.Method)[pri:13, instance:com.Tests.Voyages@331acdad]" name="createPositionBlankDataVerify" duration-ms="804" started-at="2020-02-10T18:55:53Z" description="create position" finished-at="2020-02-10T18:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.createPositionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPositionBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="83" started-at="2020-02-10T18:55:54Z" finished-at="2020-02-10T18:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="UpdatePositionVerify(java.lang.reflect.Method)[pri:14, instance:com.Tests.Voyages@331acdad]" name="UpdatePositionVerify" duration-ms="938" started-at="2020-02-10T18:55:54Z" description="update position" finished-at="2020-02-10T18:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePositionVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:54Z" finished-at="2020-02-10T18:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="68" started-at="2020-02-10T18:55:55Z" finished-at="2020-02-10T18:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:55Z" finished-at="2020-02-10T18:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="UpdatePositionStatusFalseVerify(java.lang.reflect.Method)[pri:15, instance:com.Tests.Voyages@331acdad]" name="UpdatePositionStatusFalseVerify" duration-ms="997" started-at="2020-02-10T18:55:55Z" description="Active to inactive " finished-at="2020-02-10T18:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusFalseVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePositionStatusFalseVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="84" started-at="2020-02-10T18:55:56Z" finished-at="2020-02-10T18:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:56Z" finished-at="2020-02-10T18:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="UpdatePositionStatusTrueVerify(java.lang.reflect.Method)[pri:16, instance:com.Tests.Voyages@331acdad]" name="UpdatePositionStatusTrueVerify" duration-ms="870" started-at="2020-02-10T18:55:56Z" description="InActive to active" finished-at="2020-02-10T18:55:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.UpdatePositionStatusTrueVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePositionStatusTrueVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="getTestData" is-config="true" duration-ms="73" started-at="2020-02-10T18:55:57Z" finished-at="2020-02-10T18:55:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.copyPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Voyages@331acdad]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:57Z" finished-at="2020-02-10T18:55:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.copyPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="copyPositionVerify(java.lang.reflect.Method)[pri:17, instance:com.Tests.Voyages@331acdad]" name="copyPositionVerify" duration-ms="1002" started-at="2020-02-10T18:55:57Z" description="copy position" finished-at="2020-02-10T18:55:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Voyages.copyPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyPositionVerify -->
      </class> <!-- com.Tests.Voyages -->
    </test> <!-- Voyages -->
    <test name="PositionWarning" duration-ms="305" started-at="2020-02-10T13:25:59Z" finished-at="2020-02-10T13:25:59Z">
      <class name="com.Tests.PositionWarning">
        <test-method status="PASS" signature="setClass()[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="setClass" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setClass -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="getTestData" is-config="true" duration-ms="73" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="FAIL" signature="createPositionWarningAuditVerify(java.lang.reflect.Method)[pri:1, instance:com.Tests.PositionWarning@2dc995f4]" name="createPositionWarningAuditVerify" duration-ms="13" started-at="2020-02-10T18:55:59Z" description="Create position warnning audit" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Target host is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Target host is null
	at org.apache.http.util.Asserts.notNull(Asserts.java:52)
	at org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute(ProxySelectorRoutePlanner.java:133)
	at org.apache.http.impl.client.DefaultRequestDirector.determineRoute(DefaultRequestDirector.java:761)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:380)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.HttpClient$execute$0.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2128)
	at io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)
	at io.restassured.internal.http.HTTPBuilder$post$2.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1271)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.FilterContext$next.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1731)
	at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1737)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:174)
	at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
	at com.BusinessLogic.PositionWarning_BusinessLogic.createPositionWarningAudit(PositionWarning_BusinessLogic.java:39)
	at com.Tests.PositionWarning.createPositionWarningAuditVerify(PositionWarning.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPositionWarningAuditVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="getTestData" is-config="true" duration-ms="57" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="createPositionWarningAuditBlankDataVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.PositionWarning@2dc995f4]" name="createPositionWarningAuditBlankDataVerify" duration-ms="18" started-at="2020-02-10T18:55:59Z" description="Create position warnning audit with dulpicate data" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.createPositionWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Target host is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Target host is null
	at org.apache.http.util.Asserts.notNull(Asserts.java:52)
	at org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute(ProxySelectorRoutePlanner.java:133)
	at org.apache.http.impl.client.DefaultRequestDirector.determineRoute(DefaultRequestDirector.java:761)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:380)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.HttpClient$execute$0.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2128)
	at io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)
	at io.restassured.internal.http.HTTPBuilder$post$2.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1271)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.FilterContext$next.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1731)
	at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1737)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:174)
	at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
	at com.BusinessLogic.PositionWarning_BusinessLogic.createPositionWarningAuditBlankData(PositionWarning_BusinessLogic.java:51)
	at com.Tests.PositionWarning.createPositionWarningAuditBlankDataVerify(PositionWarning.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPositionWarningAuditBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="getTestData" is-config="true" duration-ms="58" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="setUp" is-config="true" duration-ms="3" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getPositionWarningAuditVerify(java.lang.reflect.Method)[pri:3, instance:com.Tests.PositionWarning@2dc995f4]" name="getPositionWarningAuditVerify" duration-ms="12" started-at="2020-02-10T18:55:59Z" description="check position warning data" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getPositionWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Target host is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Target host is null
	at org.apache.http.util.Asserts.notNull(Asserts.java:52)
	at org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute(ProxySelectorRoutePlanner.java:133)
	at org.apache.http.impl.client.DefaultRequestDirector.determineRoute(DefaultRequestDirector.java:761)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:380)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.HttpClient$execute$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.apache.http.client.HttpClient$execute$0.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2128)
	at io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:494)
	at io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:451)
	at io.restassured.internal.http.HTTPBuilder$request$3.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1531)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1290)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.FilterContext$next.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1731)
	at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1737)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:170)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
	at com.BusinessLogic.PositionWarning_BusinessLogic.getPositionWarningAudit(PositionWarning_BusinessLogic.java:63)
	at com.Tests.PositionWarning.getPositionWarningAuditVerify(PositionWarning.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPositionWarningAuditVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="getTestData" is-config="true" duration-ms="53" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getViewOriginalEmailVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PositionWarning@2dc995f4]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getViewOriginalEmailVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getViewOriginalEmailVerify(java.lang.reflect.Method)[pri:4, instance:com.Tests.PositionWarning@2dc995f4]" name="getViewOriginalEmailVerify" duration-ms="9" started-at="2020-02-10T18:55:59Z" description="view original email" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PositionWarning.getViewOriginalEmailVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Target host is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Target host is null
	at org.apache.http.util.Asserts.notNull(Asserts.java:52)
	at org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute(ProxySelectorRoutePlanner.java:133)
	at org.apache.http.impl.client.DefaultRequestDirector.determineRoute(DefaultRequestDirector.java:761)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:380)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.HttpClient$execute$0.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2128)
	at io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:494)
	at io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:451)
	at io.restassured.internal.http.HTTPBuilder$request$3.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1531)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1290)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.FilterContext$next.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1731)
	at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1737)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:170)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
	at com.BusinessLogic.PositionWarning_BusinessLogic.getViewOriginalEmail(PositionWarning_BusinessLogic.java:75)
	at com.Tests.PositionWarning.getViewOriginalEmailVerify(PositionWarning.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getViewOriginalEmailVerify -->
      </class> <!-- com.Tests.PositionWarning -->
    </test> <!-- PositionWarning -->
    <test name="PassageWarning" duration-ms="3895" started-at="2020-02-10T13:25:59Z" finished-at="2020-02-10T13:26:03Z">
      <class name="com.Tests.PassageWarning">
        <test-method status="PASS" signature="setClass()[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="setClass" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setClass -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="getTestData" is-config="true" duration-ms="74" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="FAIL" signature="createPassageWarningAuditVerify(java.lang.reflect.Method)[pri:1, instance:com.Tests.PassageWarning@4ff4357f]" name="createPassageWarningAuditVerify" duration-ms="897" started-at="2020-02-10T18:55:59Z" description="Create position warnning audit" finished-at="2020-02-10T18:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.PassageWarning.createPassageWarningAuditVerify(PassageWarning.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPassageWarningAuditVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:55:59Z" finished-at="2020-02-10T18:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="getTestData" is-config="true" duration-ms="68" started-at="2020-02-10T18:56:00Z" finished-at="2020-02-10T18:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:00Z" finished-at="2020-02-10T18:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createPassageWarningAuditBlankDataVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.PassageWarning@4ff4357f]" name="createPassageWarningAuditBlankDataVerify" duration-ms="818" started-at="2020-02-10T18:56:00Z" description="Create position warnning audit with dulpicate data" finished-at="2020-02-10T18:56:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.createPassageWarningAuditBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPassageWarningAuditBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="getTestData" is-config="true" duration-ms="86" started-at="2020-02-10T18:56:01Z" finished-at="2020-02-10T18:56:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:01Z" finished-at="2020-02-10T18:56:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getPassageWarningAuditVerify(java.lang.reflect.Method)[pri:3, instance:com.Tests.PassageWarning@4ff4357f]" name="getPassageWarningAuditVerify" duration-ms="842" started-at="2020-02-10T18:56:01Z" description="check position warning data" finished-at="2020-02-10T18:56:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningAuditVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPassageWarningAuditVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="getTestData" is-config="true" duration-ms="84" started-at="2020-02-10T18:56:02Z" finished-at="2020-02-10T18:56:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.PassageWarning@4ff4357f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:02Z" finished-at="2020-02-10T18:56:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getPassageWarningVerify(java.lang.reflect.Method)[pri:4, instance:com.Tests.PassageWarning@4ff4357f]" name="getPassageWarningVerify" duration-ms="1018" started-at="2020-02-10T18:56:02Z" description="view original email" finished-at="2020-02-10T18:56:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.PassageWarning.getPassageWarningVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPassageWarningVerify -->
      </class> <!-- com.Tests.PassageWarning -->
    </test> <!-- PassageWarning -->
    <test name="FluidConsumption" duration-ms="14341" started-at="2020-02-10T13:26:03Z" finished-at="2020-02-10T13:26:18Z">
      <class name="com.Tests.FluidConsumption">
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="40" started-at="2020-02-10T18:56:03Z" finished-at="2020-02-10T18:56:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setClass()[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setClass" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:03Z" finished-at="2020-02-10T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:03Z" finished-at="2020-02-10T18:56:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createPositionVerify(java.lang.reflect.Method)[pri:1, instance:com.Tests.FluidConsumption@76884e4b]" name="createPositionVerify" duration-ms="1005" started-at="2020-02-10T18:56:03Z" description="create position" finished-at="2020-02-10T18:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createPositionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPositionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="82" started-at="2020-02-10T18:56:04Z" finished-at="2020-02-10T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:05Z" finished-at="2020-02-10T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="createFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidConsumptionDuplicateDataVerify" duration-ms="825" started-at="2020-02-10T18:56:05Z" description="create fluid consumption with duplicate data" finished-at="2020-02-10T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [409] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [409] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.createFluidConsumptionDuplicateDataVerify(FluidConsumption.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidConsumptionDuplicateDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="76" started-at="2020-02-10T18:56:05Z" finished-at="2020-02-10T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:05Z" finished-at="2020-02-10T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="createFluidConsumptionVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidConsumptionVerify" duration-ms="819" started-at="2020-02-10T18:56:05Z" description="create fluid consumption" finished-at="2020-02-10T18:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.createFluidConsumptionVerify(FluidConsumption.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidConsumptionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="110" started-at="2020-02-10T18:56:06Z" finished-at="2020-02-10T18:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:06Z" finished-at="2020-02-10T18:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createFluidConsumptionBlankDataVerify(java.lang.reflect.Method)[pri:3, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidConsumptionBlankDataVerify" duration-ms="824" started-at="2020-02-10T18:56:06Z" description="create fluid consumption without request body" finished-at="2020-02-10T18:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidConsumptionBlankDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidConsumptionBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="74" started-at="2020-02-10T18:56:07Z" finished-at="2020-02-10T18:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getFluidConsumptionByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:07Z" finished-at="2020-02-10T18:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getFluidConsumptionByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getFluidConsumptionByIdVerify(java.lang.reflect.Method)[pri:4, instance:com.Tests.FluidConsumption@76884e4b]" name="getFluidConsumptionByIdVerify" duration-ms="947" started-at="2020-02-10T18:56:07Z" description="get the fluid consumption" finished-at="2020-02-10T18:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getFluidConsumptionByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.getFluidConsumptionByIdVerify(FluidConsumption.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFluidConsumptionByIdVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="70" started-at="2020-02-10T18:56:08Z" finished-at="2020-02-10T18:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-10T18:56:08Z" finished-at="2020-02-10T18:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllFluidConsumptionVerify(java.lang.reflect.Method)[pri:5, instance:com.Tests.FluidConsumption@76884e4b]" name="getAllFluidConsumptionVerify" duration-ms="841" started-at="2020-02-10T18:56:08Z" description="get all the fluid consumption" finished-at="2020-02-10T18:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFluidConsumptionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="80" started-at="2020-02-10T18:56:09Z" finished-at="2020-02-10T18:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-10T18:56:09Z" finished-at="2020-02-10T18:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="updateFluidConsumptionVerify(java.lang.reflect.Method)[pri:6, instance:com.Tests.FluidConsumption@76884e4b]" name="updateFluidConsumptionVerify" duration-ms="840" started-at="2020-02-10T18:56:09Z" description="update fluid consumption" finished-at="2020-02-10T18:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.updateFluidConsumptionVerify(FluidConsumption.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFluidConsumptionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="62" started-at="2020-02-10T18:56:10Z" finished-at="2020-02-10T18:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-10T18:56:10Z" finished-at="2020-02-10T18:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="updateFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method)[pri:7, instance:com.Tests.FluidConsumption@76884e4b]" name="updateFluidConsumptionDuplicateDataVerify" duration-ms="862" started-at="2020-02-10T18:56:10Z" description="update fluid consumption with duplicate data" finished-at="2020-02-10T18:56:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateFluidConsumptionDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [409] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [409] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.updateFluidConsumptionDuplicateDataVerify(FluidConsumption.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFluidConsumptionDuplicateDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="65" started-at="2020-02-10T18:56:11Z" finished-at="2020-02-10T18:56:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createEventVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="FAIL" signature="createEventVerify(java.lang.reflect.Method)[pri:8, instance:com.Tests.FluidConsumption@76884e4b]" name="createEventVerify" duration-ms="895" started-at="2020-02-10T18:56:11Z" description="create event" finished-at="2020-02-10T18:56:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createEventVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[No signature of method: java.lang.Integer.getAt() is applicable for argument types: (java.lang.Integer) values: [0]
Possible solutions: getAt(java.lang.String), next(), putAt(java.lang.String, java.lang.Object), wait(), grep(), getClass()]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: No signature of method: java.lang.Integer.getAt() is applicable for argument types: (java.lang.Integer) values: [0]
Possible solutions: getAt(java.lang.String), next(), putAt(java.lang.String, java.lang.Object), wait(), grep(), getClass()
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255)
	at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:57)
	at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at io.restassured.path.json.JsonPath.getInt(JsonPath.java:236)
	at com.Tests.FluidConsumption.createEventVerify(FluidConsumption.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: groovy.lang.MissingMethodException: No signature of method: java.lang.Integer.getAt() is applicable for argument types: (java.lang.Integer) values: [0]
Possible solutions: getAt(java.lang.String), next(), putAt(java.lang.String, java.lang.Object), wait(), grep(), getClass()
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58)
	at org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:49)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at Script1.run(Script1.groovy:1)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:585)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:623)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:594)
	at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:190)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:71)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:80)
	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
	... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEventVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:11Z" finished-at="2020-02-10T18:56:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createEventVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="38" started-at="2020-02-10T18:56:12Z" finished-at="2020-02-10T18:56:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.deleteFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:12Z" finished-at="2020-02-10T18:56:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.deleteFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="deleteFluidConsumptionVerify(java.lang.reflect.Method)[pri:8, instance:com.Tests.FluidConsumption@76884e4b]" name="deleteFluidConsumptionVerify" duration-ms="814" started-at="2020-02-10T18:56:12Z" description="update fluid consumption with duplicate data" finished-at="2020-02-10T18:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.deleteFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.deleteFluidConsumptionVerify(FluidConsumption.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFluidConsumptionVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="56" started-at="2020-02-10T18:56:13Z" finished-at="2020-02-10T18:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:13Z" finished-at="2020-02-10T18:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createFluidEventVerify(java.lang.reflect.Method)[pri:9, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidEventVerify" duration-ms="1259" started-at="2020-02-10T18:56:13Z" description="create event fluid consumption " finished-at="2020-02-10T18:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidEventVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="61" started-at="2020-02-10T18:56:14Z" finished-at="2020-02-10T18:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:14Z" finished-at="2020-02-10T18:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createFluidEventBlankDataVerify(java.lang.reflect.Method)[pri:10, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidEventBlankDataVerify" duration-ms="818" started-at="2020-02-10T18:56:14Z" description="create event fluid consumption with blank request body" finished-at="2020-02-10T18:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidEventBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="59" started-at="2020-02-10T18:56:15Z" finished-at="2020-02-10T18:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:15Z" finished-at="2020-02-10T18:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createFluidEventDuplicateDataVerify(java.lang.reflect.Method)[pri:10, instance:com.Tests.FluidConsumption@76884e4b]" name="createFluidEventDuplicateDataVerify" duration-ms="828" started-at="2020-02-10T18:56:15Z" description="create event fluid consumption with duplicate data" finished-at="2020-02-10T18:56:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.createFluidEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFluidEventDuplicateDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="73" started-at="2020-02-10T18:56:16Z" finished-at="2020-02-10T18:56:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="FAIL" signature="updateEventFluidConsumptionVerify(java.lang.reflect.Method)[pri:11, instance:com.Tests.FluidConsumption@76884e4b]" name="updateEventFluidConsumptionVerify" duration-ms="846" started-at="2020-02-10T18:56:16Z" description="Update fluid consumption" finished-at="2020-02-10T18:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [409]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [409]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.Utilities.Assertion.assertEquals(Assertion.java:31)
	at com.InitialSetup.BaseClass.verifyResponseCode(BaseClass.java:338)
	at com.Tests.FluidConsumption.updateEventFluidConsumptionVerify(FluidConsumption.java:193)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEventFluidConsumptionVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:16Z" finished-at="2020-02-10T18:56:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.updateEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="getTestData" is-config="true" duration-ms="76" started-at="2020-02-10T18:56:17Z" finished-at="2020-02-10T18:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.FluidConsumption@76884e4b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:17Z" finished-at="2020-02-10T18:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEventFluidConsumptionVerify(java.lang.reflect.Method)[pri:12, instance:com.Tests.FluidConsumption@76884e4b]" name="getAllEventFluidConsumptionVerify" duration-ms="860" started-at="2020-02-10T18:56:17Z" description="check all  fluid consumption" finished-at="2020-02-10T18:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.FluidConsumption.getAllEventFluidConsumptionVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventFluidConsumptionVerify -->
      </class> <!-- com.Tests.FluidConsumption -->
    </test> <!-- FluidConsumption -->
    <test name="Event" duration-ms="5730" started-at="2020-02-10T13:26:18Z" finished-at="2020-02-10T13:26:24Z">
      <class name="com.Tests.Event">
        <test-method status="PASS" signature="setClass()[pri:0, instance:com.Tests.Event@6986bbaf]" name="setClass" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:18Z" finished-at="2020-02-10T18:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setClass -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="57" started-at="2020-02-10T18:56:18Z" finished-at="2020-02-10T18:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:18Z" finished-at="2020-02-10T18:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEventVerify(java.lang.reflect.Method)[pri:1, instance:com.Tests.Event@6986bbaf]" name="createEventVerify" duration-ms="863" started-at="2020-02-10T18:56:18Z" description="create event" finished-at="2020-02-10T18:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEventVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="57" started-at="2020-02-10T18:56:19Z" finished-at="2020-02-10T18:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="createEventDuplicateDataVerify(java.lang.reflect.Method)[pri:2, instance:com.Tests.Event@6986bbaf]" name="createEventDuplicateDataVerify" duration-ms="840" started-at="2020-02-10T18:56:19Z" description="create event with duplicate data" finished-at="2020-02-10T18:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEventDuplicateDataVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:19Z" finished-at="2020-02-10T18:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventDuplicateDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="68" started-at="2020-02-10T18:56:20Z" finished-at="2020-02-10T18:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:20Z" finished-at="2020-02-10T18:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEventBlankDataVerify(java.lang.reflect.Method)[pri:3, instance:com.Tests.Event@6986bbaf]" name="createEventBlankDataVerify" duration-ms="804" started-at="2020-02-10T18:56:20Z" description="create event with balnk body" finished-at="2020-02-10T18:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.createEventBlankDataVerify(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEventBlankDataVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="46" started-at="2020-02-10T18:56:21Z" finished-at="2020-02-10T18:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.updateEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="updateEventVerify(java.lang.reflect.Method)[pri:4, instance:com.Tests.Event@6986bbaf]" name="updateEventVerify" duration-ms="867" started-at="2020-02-10T18:56:21Z" description="update event" finished-at="2020-02-10T18:56:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.updateEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEventVerify -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:21Z" finished-at="2020-02-10T18:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.updateEventVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="62" started-at="2020-02-10T18:56:22Z" finished-at="2020-02-10T18:56:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getEventByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-10T18:56:22Z" finished-at="2020-02-10T18:56:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getEventByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getEventByIdVerify(java.lang.reflect.Method)[pri:5, instance:com.Tests.Event@6986bbaf]" name="getEventByIdVerify" duration-ms="879" started-at="2020-02-10T18:56:22Z" description=" event get by id " finished-at="2020-02-10T18:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getEventByIdVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventByIdVerify -->
        <test-method status="PASS" signature="getTestData(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="getTestData" is-config="true" duration-ms="54" started-at="2020-02-10T18:56:23Z" finished-at="2020-02-10T18:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getAllEventsVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestData -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.Tests.Event@6986bbaf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-02-10T18:56:23Z" finished-at="2020-02-10T18:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getAllEventsVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEventsVerify(java.lang.reflect.Method)[pri:6, instance:com.Tests.Event@6986bbaf]" name="getAllEventsVerify" duration-ms="1127" started-at="2020-02-10T18:56:23Z" description="get all event " finished-at="2020-02-10T18:56:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Tests.Event.getAllEventsVerify(java.lang.reflect.Method) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventsVerify -->
      </class> <!-- com.Tests.Event -->
    </test> <!-- Event -->
  </suite> <!-- Haud -->
</testng-results>
